name: WebAssembly Build
on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]
  # Allows running this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-wasm:
    name: Build WebAssembly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      # Simply use the system emscripten instead of an action
      - name: Install Emscripten
        run: |
          sudo apt-get update
          sudo apt-get install -y emscripten
          emcc --version
          
      - name: Configure and build with Emscripten
        run: |
          # Build with Emscripten
          mkdir -p build
          cd build
          emcmake cmake .. -DCMAKE_EXE_LINKER_FLAGS="-sTOTAL_STACK=2097152 -O2 -sASSERTIONS=1 -sMODULARIZE=1 -sALLOW_MEMORY_GROWTH -sFORCE_FILESYSTEM=1 -sEXIT_RUNTIME=0 -s EXPORTED_RUNTIME_METHODS=[\"callMain\",\"FS\",\"PROXYFS\",\"WORKERFS\",\"UTF8ToString\",\"getValue\",\"AsciiToString\"] -lworkerfs.js -lproxyfs.js -s INVOKE_RUN=0 -s ENVIRONMENT=\"web,worker\" -fwasm-exceptions --preload-file ../res@/hyphy --preload-file ../tests/hbltests@/tests"
          emmake make -j hyphy
          
      - name: Display build artifacts
        run: |
          cd build
          ls -la
          
      # Create a release for the web files instead of using upload-artifact
      - name: Create GitHub release with WebAssembly builds
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
        run: |
          # Create a release
          RELEASE_NAME="wasm-build-$(date +%Y%m%d%H%M%S)"
          
          # Package the WebAssembly files
          mkdir -p wasm-package
          cp build/hyphy.js wasm-package/
          cp build/hyphy.wasm wasm-package/
          cp build/hyphy.data wasm-package/
          tar -czvf hyphy-wasm.tar.gz -C wasm-package .
          
          # Create a release and upload the files
          # Use the GitHub CLI if available, otherwise use curl
          if command -v gh &> /dev/null; then
            gh release create $RELEASE_NAME hyphy-wasm.tar.gz --title "WebAssembly Build $RELEASE_NAME" --notes "Automated WebAssembly build"
          else
            # Upload using GitHub API
            echo "GitHub CLI not found, skipping release creation"
            echo "WebAssembly files are available in the build directory"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}